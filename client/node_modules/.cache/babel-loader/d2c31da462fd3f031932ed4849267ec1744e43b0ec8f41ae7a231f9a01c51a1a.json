{"ast":null,"code":"// Source from https://github.com/alitaheri/normalize-scroll-left\nvar cachedType;\n/**\n * Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type\n *\n * Types of scrollLeft, assiming scrollWidth=100 and direction is rtl.\n *\n * Browser        | Type          | <- Most Left | Most Right -> | Initial\n * -------------- | ------------- | ------------ | ------------- | -------\n * WebKit         | default       | 0            | 100           | 100\n * Firefox/Opera  | negative      | -100         | 0             | 0\n * IE/Edge        | reverse       | 100          | 0             | 0\n */\n\nexport function detectScrollType() {\n  if (cachedType) {\n    return cachedType;\n  }\n  var dummy = document.createElement('div');\n  dummy.appendChild(document.createTextNode('ABCD'));\n  dummy.dir = 'rtl';\n  dummy.style.fontSize = '14px';\n  dummy.style.width = '4px';\n  dummy.style.height = '1px';\n  dummy.style.position = 'absolute';\n  dummy.style.top = '-1000px';\n  dummy.style.overflow = 'scroll';\n  document.body.appendChild(dummy);\n  cachedType = 'reverse';\n  if (dummy.scrollLeft > 0) {\n    cachedType = 'default';\n  } else {\n    dummy.scrollLeft = 1;\n    if (dummy.scrollLeft === 0) {\n      cachedType = 'negative';\n    }\n  }\n  document.body.removeChild(dummy);\n  return cachedType;\n} // Based on https://stackoverflow.com/a/24394376\n\nexport function getNormalizedScrollLeft(element, direction) {\n  var scrollLeft = element.scrollLeft; // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior\n\n  if (direction !== 'rtl') {\n    return scrollLeft;\n  }\n  var type = detectScrollType();\n  switch (type) {\n    case 'negative':\n      return element.scrollWidth - element.clientWidth + scrollLeft;\n    case 'reverse':\n      return element.scrollWidth - element.clientWidth - scrollLeft;\n    default:\n      return scrollLeft;\n  }\n}","map":{"version":3,"names":["cachedType","detectScrollType","dummy","document","createElement","appendChild","createTextNode","dir","style","fontSize","width","height","position","top","overflow","body","scrollLeft","removeChild","getNormalizedScrollLeft","element","direction","type","scrollWidth","clientWidth"],"sources":["C:/Users/amiat/Desktop/Personal-Projects/MemoryCanvas/client/node_modules/@material-ui/core/esm/utils/scrollLeft.js"],"sourcesContent":["// Source from https://github.com/alitaheri/normalize-scroll-left\nvar cachedType;\n/**\n * Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type\n *\n * Types of scrollLeft, assiming scrollWidth=100 and direction is rtl.\n *\n * Browser        | Type          | <- Most Left | Most Right -> | Initial\n * -------------- | ------------- | ------------ | ------------- | -------\n * WebKit         | default       | 0            | 100           | 100\n * Firefox/Opera  | negative      | -100         | 0             | 0\n * IE/Edge        | reverse       | 100          | 0             | 0\n */\n\nexport function detectScrollType() {\n  if (cachedType) {\n    return cachedType;\n  }\n\n  var dummy = document.createElement('div');\n  dummy.appendChild(document.createTextNode('ABCD'));\n  dummy.dir = 'rtl';\n  dummy.style.fontSize = '14px';\n  dummy.style.width = '4px';\n  dummy.style.height = '1px';\n  dummy.style.position = 'absolute';\n  dummy.style.top = '-1000px';\n  dummy.style.overflow = 'scroll';\n  document.body.appendChild(dummy);\n  cachedType = 'reverse';\n\n  if (dummy.scrollLeft > 0) {\n    cachedType = 'default';\n  } else {\n    dummy.scrollLeft = 1;\n\n    if (dummy.scrollLeft === 0) {\n      cachedType = 'negative';\n    }\n  }\n\n  document.body.removeChild(dummy);\n  return cachedType;\n} // Based on https://stackoverflow.com/a/24394376\n\nexport function getNormalizedScrollLeft(element, direction) {\n  var scrollLeft = element.scrollLeft; // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior\n\n  if (direction !== 'rtl') {\n    return scrollLeft;\n  }\n\n  var type = detectScrollType();\n\n  switch (type) {\n    case 'negative':\n      return element.scrollWidth - element.clientWidth + scrollLeft;\n\n    case 'reverse':\n      return element.scrollWidth - element.clientWidth - scrollLeft;\n\n    default:\n      return scrollLeft;\n  }\n}"],"mappings":"AAAA;AACA,IAAIA,UAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,gBAAgBA,CAAA,EAAG;EACjC,IAAID,UAAU,EAAE;IACd,OAAOA,UAAU;EACnB;EAEA,IAAIE,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EACzCF,KAAK,CAACG,WAAW,CAACF,QAAQ,CAACG,cAAc,CAAC,MAAM,CAAC,CAAC;EAClDJ,KAAK,CAACK,GAAG,GAAG,KAAK;EACjBL,KAAK,CAACM,KAAK,CAACC,QAAQ,GAAG,MAAM;EAC7BP,KAAK,CAACM,KAAK,CAACE,KAAK,GAAG,KAAK;EACzBR,KAAK,CAACM,KAAK,CAACG,MAAM,GAAG,KAAK;EAC1BT,KAAK,CAACM,KAAK,CAACI,QAAQ,GAAG,UAAU;EACjCV,KAAK,CAACM,KAAK,CAACK,GAAG,GAAG,SAAS;EAC3BX,KAAK,CAACM,KAAK,CAACM,QAAQ,GAAG,QAAQ;EAC/BX,QAAQ,CAACY,IAAI,CAACV,WAAW,CAACH,KAAK,CAAC;EAChCF,UAAU,GAAG,SAAS;EAEtB,IAAIE,KAAK,CAACc,UAAU,GAAG,CAAC,EAAE;IACxBhB,UAAU,GAAG,SAAS;EACxB,CAAC,MAAM;IACLE,KAAK,CAACc,UAAU,GAAG,CAAC;IAEpB,IAAId,KAAK,CAACc,UAAU,KAAK,CAAC,EAAE;MAC1BhB,UAAU,GAAG,UAAU;IACzB;EACF;EAEAG,QAAQ,CAACY,IAAI,CAACE,WAAW,CAACf,KAAK,CAAC;EAChC,OAAOF,UAAU;AACnB,CAAC,CAAC;;AAEF,OAAO,SAASkB,uBAAuBA,CAACC,OAAO,EAAEC,SAAS,EAAE;EAC1D,IAAIJ,UAAU,GAAGG,OAAO,CAACH,UAAU,CAAC,CAAC;;EAErC,IAAII,SAAS,KAAK,KAAK,EAAE;IACvB,OAAOJ,UAAU;EACnB;EAEA,IAAIK,IAAI,GAAGpB,gBAAgB,CAAC,CAAC;EAE7B,QAAQoB,IAAI;IACV,KAAK,UAAU;MACb,OAAOF,OAAO,CAACG,WAAW,GAAGH,OAAO,CAACI,WAAW,GAAGP,UAAU;IAE/D,KAAK,SAAS;MACZ,OAAOG,OAAO,CAACG,WAAW,GAAGH,OAAO,CAACI,WAAW,GAAGP,UAAU;IAE/D;MACE,OAAOA,UAAU;EACrB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}